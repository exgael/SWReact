/*
 ******************************************************
 *                     Base Style                     *
 ******************************************************
 */

*, *::before, *::after {
    box-sizing: border-box;
}

/*
 ******************************************************
 *                     Animations                     *
 ******************************************************
 */

@keyframes slideIn {
    from {
        transform: translateY(100%);
    }
    to {
        transform: translateY(0);
    }
}

/*
 ******************************************************
 *             Base HTML and Body Styles              *
 ******************************************************
 */

html {
    margin: 0;

    min-height: calc(100% + env(safe-area-inset-top));

    /*padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);*/

    /* Remove default tap highlight from navigators */
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

body {
    /*
    Resets the default margin of the body, which browsers apply by default.
    This is a common practice in CSS resets to ensure consistency across browsers.
    */
    margin: 0;
    padding: 0;

    /*
    Sets a list of font families for the content, providing fallbacks if the previous fonts aren't available.
    */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;

    /*
    These are browser-specific properties to enhance the readability of text,
    particularly on macOS and iOS.
    */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    background-color: #F8F7F2;

    scrollbar-width: none; /* Firefox 64+ */
    -ms-overflow-style: none; /* IE 10+ */
}


/*
 ******************************************************
 *               Reusable Components                  *
 ******************************************************
 */
.glass, .glassBar {
    /* Shared Styles */
    background: rgba(248, 247, 242, 0.69);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    /*border: 1px solid rgba(150, 150, 150, 0.4);*/
}

.no-glass {
    /* Shared Styles */
    background: rgba(248, 247, 242, 0.69);
    backdrop-filter: blur(20px);
}

.glassBar {
    /* Unique Styles */
    border-radius: 20px;
}

/*
 ******************************************************
 *               Responsive Design                    *
 ******************************************************
 */

/*
 @Device: Phone
*/
@media (max-width: 576px) {

    :root {
        --top-padding-phone: 10vh;
        --bottom-padding-phone: 5vh;
        --bottom-bar-height: max(min(8.5vh, 80px ), 45px);

        /* BottomBar icon and text setup */
        --bottom-bar-icon-offset: 0.8vh;
        --bottom-bar-icon-text-size: 0.7rem;
    }

    /*
      @Description:
      This ensures that the content is not flush against the edges of the screen,
      making it more visually appealing and easier to interact with,
      especially on touch devices.

      @UseCase:
      This padding might be particularly useful
      if there are fixed headers or footers,
      as it prevents content from being hidden behind these elements.
    */
    body {
        padding-top: var(--top-padding-phone) !important;
        padding-bottom: var(--bottom-padding-phone) !important;
        overflow-y: auto;
    }

    .bottom-bar {
        height: var(--bottom-bar-height) !important;
        padding-top: var(--bottom-bar-icon-offset) !important;
        font-size: var(--bottom-bar-icon-text-size) !important;
    }

    .content {
        padding: env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left);
    }

    /*.LargeTitle {*/
    /*    position: relative; !* Or absolute, depending on your layout *!*/
    /*    !*top: var(--top-padding-phone); !* Adjust based on the height of your top bar *!*!*/
    /*    z-index: -1;*/
    /*    left: 5vw;*/
    /*    width: 100%;*/
    /*    transition: transform 150ms, opacity 0.2s;  !*Smooth transition for scrolling effect *!*/
    /*}*/

}

/*
 @Device: Tablet
*/
@media (min-width: 576px) and (max-width: 992px) {
    :root {
        --left-padding-tablet: 20vw;
        --sidebar-width-tablet: min(20vw, 200px);
    }

    body {
        /*
         @Description:
         This significant padding on the left side can create an asymmetrical layout,
         which might be intended for specific design purposes
         like sidebar navigation or to offset the main content for better focus.

         @UseCase:
         This is useful for layouts that require a distinct visual separation or alignment,
         especially on tablet devices where screen real estate is more generous
         than phones but less than desktops.
        */
        padding-left: var(--left-padding-tablet) !important;
    }

    .sidebar {
        width: var(--sidebar-width-tablet) !important;
    }
}

/*
 @Device: Desktop
*/
@media (min-width: 992px) {
    :root {
        --top-padding-desktop: max(5vh, 65px);
        --header-bar-height: 65px;
    }

    body {
        /*
          @Description:
          This creates a space at the top of the page,
          which could be useful for designs with a fixed navigation bar
          or header to ensure that the top content is not obscured.

          @UseCase:
          On desktops, where vertical space is less of a constraint,
          this padding helps in maintaining a balanced and accessible layout,
          particularly for navigation elements or branding headers.

          @Explanation:

          Border of the Screen (Browser Window)
          ------------------------------------- (Top edge of the body)
          |
          | <-- Value padding-top inside the body
          |
          Content starts here
        */
        padding-top: var(--top-padding-desktop) !important;
    }

    .header-bar {
        height: var(--header-bar-height) !important;
    }
}

/*
 ******************************************************
 *       Styles for Progressive Web Apps (PWA)        *
 ******************************************************
 */

@media screen and (display-mode: standalone) {
    /*
    @Class
    .top-bar

    @UseCase:
    This is particularly useful for ensuring that the top bar
    of your web app has consistent sizing in the PWA mode,
    especially when the app might not have the usual browser chrome to account for.
    */
    .top-bar {
        height: 10vh !important;
    }
}

/*
 ******************************************************
 *               Scrollbar Styling                    *
 ******************************************************
 */
::-webkit-scrollbar {
    display: none;
    width: 0; /* For vertical scrollbars */
    height: 0; /* For horizontal scrollbars */
}